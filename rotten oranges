class Solution {
    public int orangesRotting(int[][] grid) {
        Queue<int[]> q=new LinkedList<>();
        int time=0,fresh=0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]==2)
                    q.add(new int[]{i,j});
                else if(grid[i][j]==1)
                    fresh++;
            }
        }
        if(fresh==0)
            return 0;
        int d[][]={{1,0},{0,1},{-1,0},{0,-1},};
        while(!q.isEmpty() && fresh>0){
            time++;
            int s=q.size();
            while(s-->0){
                int[] p=q.poll();
                for(int[] dt:d){
                    int x=p[0]+dt[0];
                    int y=p[1]+dt[1];
                    if(x<0 || y<0 || x>=grid.length || y>=grid[0].length || grid[x][y]==2 || grid[x][y]==0)
                        continue;
                    q.add(new int[]{x,y});
                    grid[x][y]=2;
                    fresh--;
                }
            }
        }
        if(fresh==0)
            return time;
        else
            return -1;
    }
}
